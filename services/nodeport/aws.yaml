apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploypod
  labels:
    app: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web

  template:
    metadata:
      name: containerpod
      labels:
        app: web
    spec:
      containers:
      - name: c1
        image: 672518094988.dkr.ecr.us-west-2.amazonaws.com/hello-world:v1.0
        ports:
        - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: mysvc
  labels:
    app: web
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer

# ---

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: myingress
#   annotations:
#     konghq.com/strip-path: "true"
#     kubernetes.io/ingress.class: kong
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: mysvc
#             port:
#               number: 80

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress
#   labels:
#     app: web
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
  
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: mysvc
#             port:
#               number: 80
